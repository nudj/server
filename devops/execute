#!/bin/sh

validEnvironment() {
  [ "$1" = "local" ] || \
  [ "$1" = "demo" ] || \
  [ "$1" = "staging" ] || \
  [ "$1" = "production" ]
}

environment=$1
if [ -z "$1" ]
then
  echo "Must supply an environment - e.g. ENV=demo"
  exit 1
fi

if ! validEnvironment $environment
then
  echo "Must supply a valid environment - local|demo|staging|production"
  exit 1
fi

script=$2
if [ -z "$2" ]
then
  echo "Must supply a script name - e.g. SCRIPT=00000-export-role-tags"
  exit 1
fi

arg=$3
server="nudj$environment"

echo "Executing $script onto $environment"

if [[ "$environment" = "demo" || "$environment" = "staging" || "$environment" = "production" ]]; then
  echo "local: Syncing devops scripts to $environment"
  rsync -az --delete -e "ssh" $PWD/devops/remote/ $server:/home/nudjtech/devops

  echo "local: Syncing execution scripts to $environment"
  rsync -az --delete -e "ssh" $PWD/../api/src/scripts/ $server:/home/nudjtech/scripts

  echo "local: Executing script on $environment"

  dockerRun="docker-compose run --no-deps --rm"
  scriptsDir="/home/nudjtech/scripts"

  ssh -t $server /bin/sh -c "'/home/nudjtech/devops/execute $environment $script \"$dockerRun\" $scriptsDir \"$arg\"'"
  exitCode=$?
else
  echo "local: Executing script script locally"

  scriptsDir="$PWD/../api/src/scripts"
  dockerRun="docker-compose -p nudj -f $PWD/docker-compose.yml -f $PWD/../api/docker-compose.yml run --rm"

  $PWD/devops/remote/execute "local" "$script" "$dockerRun" "$scriptsDir" "$arg"
  exitCode=$?
fi

[[ $exitCode = 0 ]] && result="complete üëç" || result="failed üëé"
echo "\nlocal: Execution of $script onto $environment $result"
